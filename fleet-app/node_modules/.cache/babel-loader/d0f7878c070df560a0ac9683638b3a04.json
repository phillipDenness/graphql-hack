{"ast":null,"code":"var _jsxFileName = \"/Users/phildenn/Documents/repository/graphql-ui/fleet-app/src/User.js\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport query from './query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction User() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Query, {\n      query: query,\n      children: ({\n        data\n      }) => {\n        console.log(data);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: data.users.map(({\n              id,\n              name,\n              car\n            }) => {\n              const list = /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [name, /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: car.length !== 0 ? car.map(({\n                    make,\n                    model,\n                    colour\n                  }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [make, \" \", model, \" \", colour]\n                  }, `${id}-${make}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 17,\n                    columnNumber: 76\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"No car\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 19,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 15,\n                  columnNumber: 33\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 42\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/phildenn/Documents/repository/graphql-ui/fleet-app/src/User.js"],"names":["React","Query","query","User","data","console","log","users","map","id","name","car","list","length","make","model","colour"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBAAQ;AAAA,2BACJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAA,gBACK,CAAC;AAACE,QAAAA;AAAD,OAAD,KAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,4BAAO;AAAA,iCACH;AAAA,sBACKA,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,CAAC;AAACC,cAAAA,EAAD;AAAKC,cAAAA,IAAL;AAAWC,cAAAA;AAAX,aAAD,KAAqB;AACjC,oBAAMC,IAAI,gBAAG;AAAA,2BACRF,IADQ,eAET;AAAA,4BACKC,GAAG,CAACE,MAAJ,KAAe,CAAf,GACGF,GAAG,CAACH,GAAJ,CAAQ,CAAC;AAACM,oBAAAA,IAAD;AAAOC,oBAAAA,KAAP;AAAcC,oBAAAA;AAAd,mBAAD,kBAA2B;AAAA,+BACRF,IADQ,OACDC,KADC,OACOC,MADP;AAAA,qBACzB,GAAEP,EAAG,IAAGK,IAAK,EADY;AAAA;AAAA;AAAA;AAAA,0BAAnC,CADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAFS;AAAA,iBAASL,EAAT;AAAA;AAAA;AAAA;AAAA,sBAAb;AAUH,aAXA;AADL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAgBH;AAnBL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAuBH;;KAxBQN,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { Query} from 'react-apollo';\nimport query from './query'\n\nfunction User() {\n    return (<div>\n        <Query query={query}>\n            {({data}) => {\n                console.log(data);\n                return <div>\n                    <ul>\n                        {data.users.map(({id, name, car}) => {\n                            const list = <li key={id}>\n                                {name}\n                                <ul>\n                                    {car.length !== 0 ?\n                                        car.map(({make, model, colour}) => <li\n                                            key={`${id}-${make}`}>{make} {model} {colour}</li>) :\n                                        <li>No car</li>\n                                    }\n                                </ul>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            }}\n        </Query>\n    </div>);\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}