{"ast":null,"code":"var _jsxFileName = \"/Users/phildenn/Documents/repository/graphql-ui/fleet-app/src/User.js\";\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport query from './query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction User() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Query, {\n      query: query,\n      children: ({\n        data,\n        loading\n      }) => {\n        if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 37\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: data.users.map(({\n              id,\n              name,\n              car\n            }) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [name, /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: car.length !== 0 ? car.map(({\n                  make,\n                  model,\n                  colour\n                }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [make, \" \", model, \" \", colour]\n                }, `${id}-${make}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 16,\n                  columnNumber: 76\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"No car\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 33\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 62\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/phildenn/Documents/repository/graphql-ui/fleet-app/src/User.js"],"names":["React","Query","query","User","data","loading","users","map","id","name","car","length","make","model","colour"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAqB,cAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,IAAT,GAAgB;AACZ,sBAAQ;AAAA,2BACJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAA,gBACK,CAAC;AAACE,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD,KAAqB;AAClB,YAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACb,4BAAO;AAAA,iCACH;AAAA,sBACKD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,CAAC;AAACC,cAAAA,EAAD;AAAKC,cAAAA,IAAL;AAAWC,cAAAA;AAAX,aAAD,kBAAqB;AAAA,yBAC5BD,IAD4B,eAE7B;AAAA,0BACKC,GAAG,CAACC,MAAJ,KAAe,CAAf,GACGD,GAAG,CAACH,GAAJ,CAAQ,CAAC;AAACK,kBAAAA,IAAD;AAAOC,kBAAAA,KAAP;AAAcC,kBAAAA;AAAd,iBAAD,kBAA2B;AAAA,6BACRF,IADQ,OACDC,KADC,OACOC,MADP;AAAA,mBACzB,GAAEN,EAAG,IAAGI,IAAK,EADY;AAAA;AAAA;AAAA;AAAA,wBAAnC,CADH,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,sBAF6B;AAAA,eAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,oBAApC;AADL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAcH;AAjBL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAqBH;;KAtBQL,I;AAwBT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { Query} from 'react-apollo';\nimport query from './query'\n\nfunction User() {\n    return (<div>\n        <Query query={query}>\n            {({data, loading}) => {\n                if (loading) return <p>Loading...</p>;\n                return <div>\n                    <ul>\n                        {data.users.map(({id, name, car}) => <li key={id}>\n                                {name}\n                                <ul>\n                                    {car.length !== 0 ?\n                                        car.map(({make, model, colour}) => <li\n                                            key={`${id}-${make}`}>{make} {model} {colour}</li>) :\n                                        <li>No car</li>\n                                    }\n                                </ul>\n                            </li>)}\n                    </ul>\n                </div>\n            }}\n        </Query>\n    </div>);\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}